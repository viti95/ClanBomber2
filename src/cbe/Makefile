# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/cbe/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/clanbomber
pkgincludedir = $(includedir)/clanbomber
pkglibdir = $(libdir)/clanbomber
pkglibexecdir = $(libexecdir)/clanbomber
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = armv7l-unknown-linux-gnueabi
host_triplet = armv7l-unknown-linux-gnueabi
subdir = src/cbe
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/adl_compute_relative_paths.m4 \
	$(top_srcdir)/m4/adl_compute_standard_relative_paths.m4 \
	$(top_srcdir)/m4/adl_normalize_path.m4 \
	$(top_srcdir)/m4/ax_boost_asio.m4 \
	$(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/m4/ax_boost_system.m4 \
	$(top_srcdir)/m4/ax_boost_thread.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libcbe_a_AR = $(AR) $(ARFLAGS)
libcbe_a_LIBADD =
am_libcbe_a_OBJECTS = libcbe_a-FontSDL.$(OBJEXT) \
	libcbe_a-SurfaceSDL.$(OBJEXT) \
	libcbe_a-AudioSimpleSDL.$(OBJEXT) \
	libcbe_a-AudioBufferSDL.$(OBJEXT) \
	libcbe_a-MusicSDL.$(OBJEXT) \
	libcbe_a-PluginManager.$(OBJEXT)
libcbe_a_OBJECTS = $(am_libcbe_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libcbe_a_SOURCES)
DIST_SOURCES = $(libcbe_a_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/pi/clanbomber-2.3/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/pi/clanbomber-2.3/missing --run tar
AUTOCONF = ${SHELL} /home/pi/clanbomber-2.3/missing --run autoconf
AUTOHEADER = ${SHELL} /home/pi/clanbomber-2.3/missing --run autoheader
AUTOMAKE = ${SHELL} /home/pi/clanbomber-2.3/missing --run automake-1.11
AWK = mawk
BOOST_ASIO_LIB = -lboost_system
BOOST_CPPFLAGS = -I/usr/include
BOOST_FILESYSTEM_LIB = -lboost_filesystem
BOOST_LDFLAGS = -L/usr/lib/arm-linux-gnueabihf
BOOST_SYSTEM_LIB = -lboost_system
BOOST_THREAD_LIB = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -std=c++11 -Ofast -mcpu=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard -ftree-vectorize -ftree-vectorizer-verbose=2 -lpthread -DNDEBUG
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -std=c++11 -Ofast -mcpu=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard -ftree-vectorize -ftree-vectorizer-verbose=2 -lpthread -DNDEBUG
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GETTEXT_MACRO_VERSION = 0.17
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
LDFLAGS = 
LIBGUILE_CFLAGS = 
LIBGUILE_LIBS = 
LIBICONV = -liconv
LIBINTL = 
LIBOBJS = 
LIBS = 
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/pi/clanbomber-2.3/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGFMT_015 = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
OBJEXT = o
PACKAGE = clanbomber
PACKAGE_BUGREPORT = rsl@members.fsf.org
PACKAGE_NAME = ClanBomber
PACKAGE_STRING = ClanBomber 2.3.0
PACKAGE_TARNAME = clanbomber
PACKAGE_URL = 
PACKAGE_VERSION = 2.3.0
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POSUB = po
RANLIB = ranlib
RELATIVE_DATADIR = ${datarootdir}
SDL_CFLAGS = -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL 
SDL_GFX_LIBS = -lSDL_gfx
SDL_IMAGE_LIBS = -lSDL_image
SDL_LIBS = -lSDL 
SDL_MIXER_LIBS = -lSDL_mixer
SDL_TTF_LIBS = -lSDL_ttf
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
USE_NLS = yes
VERSION = 2.3.0
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
abs_builddir = /home/pi/clanbomber-2.3/src/cbe
abs_srcdir = /home/pi/clanbomber-2.3/src/cbe
abs_top_builddir = /home/pi/clanbomber-2.3
abs_top_srcdir = /home/pi/clanbomber-2.3
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = armv7l-unknown-linux-gnueabi
build_alias = 
build_cpu = armv7l
build_os = linux-gnueabi
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = armv7l-unknown-linux-gnueabi
host_alias = 
host_cpu = armv7l
host_os = linux-gnueabi
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/pi/clanbomber-2.3/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
noinst_LIBRARIES = libcbe.a
libcbe_a_CPPFLAGS = $(SDL_CFLAGS)
libcbe_a_SOURCES = \
	Font.h \
	FontSDL.cpp \
	FontSDL.h \
	Surface.h \
	SurfaceSDL.cpp \
	SurfaceSDL.h \
	AudioSimple.h \
	AudioBuffer.h \
	Music.h \
	SDL/AudioSimpleSDL.h \
	SDL/AudioSimpleSDL.cpp \
	SDL/AudioBufferSDL.h \
	SDL/AudioBufferSDL.cpp \
	SDL/MusicSDL.h \
	SDL/MusicSDL.cpp \
	SDL/FactoriesSDL.hpp \
	Factories.hpp \
	PluginManager.h \
	PluginManager.cpp

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/cbe/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/cbe/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libcbe.a: $(libcbe_a_OBJECTS) $(libcbe_a_DEPENDENCIES) 
	-rm -f libcbe.a
	$(libcbe_a_AR) libcbe.a $(libcbe_a_OBJECTS) $(libcbe_a_LIBADD)
	$(RANLIB) libcbe.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libcbe_a-AudioBufferSDL.Po
include ./$(DEPDIR)/libcbe_a-MusicSDL.Po
include ./$(DEPDIR)/libcbe_a-AudioSimpleSDL.Po
include ./$(DEPDIR)/libcbe_a-FontSDL.Po
include ./$(DEPDIR)/libcbe_a-PluginManager.Po
include ./$(DEPDIR)/libcbe_a-SurfaceSDL.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libcbe_a-FontSDL.o: FontSDL.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcbe_a-FontSDL.o -MD -MP -MF $(DEPDIR)/libcbe_a-FontSDL.Tpo -c -o libcbe_a-FontSDL.o `test -f 'FontSDL.cpp' || echo '$(srcdir)/'`FontSDL.cpp
	$(am__mv) $(DEPDIR)/libcbe_a-FontSDL.Tpo $(DEPDIR)/libcbe_a-FontSDL.Po
#	source='FontSDL.cpp' object='libcbe_a-FontSDL.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcbe_a-FontSDL.o `test -f 'FontSDL.cpp' || echo '$(srcdir)/'`FontSDL.cpp

libcbe_a-FontSDL.obj: FontSDL.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcbe_a-FontSDL.obj -MD -MP -MF $(DEPDIR)/libcbe_a-FontSDL.Tpo -c -o libcbe_a-FontSDL.obj `if test -f 'FontSDL.cpp'; then $(CYGPATH_W) 'FontSDL.cpp'; else $(CYGPATH_W) '$(srcdir)/FontSDL.cpp'; fi`
	$(am__mv) $(DEPDIR)/libcbe_a-FontSDL.Tpo $(DEPDIR)/libcbe_a-FontSDL.Po
#	source='FontSDL.cpp' object='libcbe_a-FontSDL.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcbe_a-FontSDL.obj `if test -f 'FontSDL.cpp'; then $(CYGPATH_W) 'FontSDL.cpp'; else $(CYGPATH_W) '$(srcdir)/FontSDL.cpp'; fi`

libcbe_a-SurfaceSDL.o: SurfaceSDL.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcbe_a-SurfaceSDL.o -MD -MP -MF $(DEPDIR)/libcbe_a-SurfaceSDL.Tpo -c -o libcbe_a-SurfaceSDL.o `test -f 'SurfaceSDL.cpp' || echo '$(srcdir)/'`SurfaceSDL.cpp
	$(am__mv) $(DEPDIR)/libcbe_a-SurfaceSDL.Tpo $(DEPDIR)/libcbe_a-SurfaceSDL.Po
#	source='SurfaceSDL.cpp' object='libcbe_a-SurfaceSDL.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcbe_a-SurfaceSDL.o `test -f 'SurfaceSDL.cpp' || echo '$(srcdir)/'`SurfaceSDL.cpp

libcbe_a-SurfaceSDL.obj: SurfaceSDL.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcbe_a-SurfaceSDL.obj -MD -MP -MF $(DEPDIR)/libcbe_a-SurfaceSDL.Tpo -c -o libcbe_a-SurfaceSDL.obj `if test -f 'SurfaceSDL.cpp'; then $(CYGPATH_W) 'SurfaceSDL.cpp'; else $(CYGPATH_W) '$(srcdir)/SurfaceSDL.cpp'; fi`
	$(am__mv) $(DEPDIR)/libcbe_a-SurfaceSDL.Tpo $(DEPDIR)/libcbe_a-SurfaceSDL.Po
#	source='SurfaceSDL.cpp' object='libcbe_a-SurfaceSDL.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcbe_a-SurfaceSDL.obj `if test -f 'SurfaceSDL.cpp'; then $(CYGPATH_W) 'SurfaceSDL.cpp'; else $(CYGPATH_W) '$(srcdir)/SurfaceSDL.cpp'; fi`

libcbe_a-AudioSimpleSDL.o: SDL/AudioSimpleSDL.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcbe_a-AudioSimpleSDL.o -MD -MP -MF $(DEPDIR)/libcbe_a-AudioSimpleSDL.Tpo -c -o libcbe_a-AudioSimpleSDL.o `test -f 'SDL/AudioSimpleSDL.cpp' || echo '$(srcdir)/'`SDL/AudioSimpleSDL.cpp
	$(am__mv) $(DEPDIR)/libcbe_a-AudioSimpleSDL.Tpo $(DEPDIR)/libcbe_a-AudioSimpleSDL.Po
#	source='SDL/AudioSimpleSDL.cpp' object='libcbe_a-AudioSimpleSDL.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcbe_a-AudioSimpleSDL.o `test -f 'SDL/AudioSimpleSDL.cpp' || echo '$(srcdir)/'`SDL/AudioSimpleSDL.cpp

libcbe_a-AudioSimpleSDL.obj: SDL/AudioSimpleSDL.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcbe_a-AudioSimpleSDL.obj -MD -MP -MF $(DEPDIR)/libcbe_a-AudioSimpleSDL.Tpo -c -o libcbe_a-AudioSimpleSDL.obj `if test -f 'SDL/AudioSimpleSDL.cpp'; then $(CYGPATH_W) 'SDL/AudioSimpleSDL.cpp'; else $(CYGPATH_W) '$(srcdir)/SDL/AudioSimpleSDL.cpp'; fi`
	$(am__mv) $(DEPDIR)/libcbe_a-AudioSimpleSDL.Tpo $(DEPDIR)/libcbe_a-AudioSimpleSDL.Po
#	source='SDL/AudioSimpleSDL.cpp' object='libcbe_a-AudioSimpleSDL.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcbe_a-AudioSimpleSDL.obj `if test -f 'SDL/AudioSimpleSDL.cpp'; then $(CYGPATH_W) 'SDL/AudioSimpleSDL.cpp'; else $(CYGPATH_W) '$(srcdir)/SDL/AudioSimpleSDL.cpp'; fi`

libcbe_a-AudioBufferSDL.o: SDL/AudioBufferSDL.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcbe_a-AudioBufferSDL.o -MD -MP -MF $(DEPDIR)/libcbe_a-AudioBufferSDL.Tpo -c -o libcbe_a-AudioBufferSDL.o `test -f 'SDL/AudioBufferSDL.cpp' || echo '$(srcdir)/'`SDL/AudioBufferSDL.cpp
	$(am__mv) $(DEPDIR)/libcbe_a-AudioBufferSDL.Tpo $(DEPDIR)/libcbe_a-AudioBufferSDL.Po
#	source='SDL/AudioBufferSDL.cpp' object='libcbe_a-AudioBufferSDL.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcbe_a-AudioBufferSDL.o `test -f 'SDL/AudioBufferSDL.cpp' || echo '$(srcdir)/'`SDL/AudioBufferSDL.cpp

libcbe_a-AudioBufferSDL.obj: SDL/AudioBufferSDL.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcbe_a-AudioBufferSDL.obj -MD -MP -MF $(DEPDIR)/libcbe_a-AudioBufferSDL.Tpo -c -o libcbe_a-AudioBufferSDL.obj `if test -f 'SDL/AudioBufferSDL.cpp'; then $(CYGPATH_W) 'SDL/AudioBufferSDL.cpp'; else $(CYGPATH_W) '$(srcdir)/SDL/AudioBufferSDL.cpp'; fi`
	$(am__mv) $(DEPDIR)/libcbe_a-AudioBufferSDL.Tpo $(DEPDIR)/libcbe_a-AudioBufferSDL.Po
#	source='SDL/AudioBufferSDL.cpp' object='libcbe_a-AudioBufferSDL.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcbe_a-AudioBufferSDL.obj `if test -f 'SDL/AudioBufferSDL.cpp'; then $(CYGPATH_W) 'SDL/AudioBufferSDL.cpp'; else $(CYGPATH_W) '$(srcdir)/SDL/AudioBufferSDL.cpp'; fi`

libcbe_a-MusicSDL.o: SDL/MusicSDL.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcbe_a-MusicSDL.o -MD -MP -MF $(DEPDIR)/libcbe_a-MusicSDL.Tpo -c -o libcbe_a-MusicSDL.o `test -f 'SDL/MusicSDL.cpp' || echo '$(srcdir)/'`SDL/MusicSDL.cpp
	$(am__mv) $(DEPDIR)/libcbe_a-MusicSDL.Tpo $(DEPDIR)/libcbe_a-MusicSDL.Po
#	source='SDL/MusicSDL.cpp' object='libcbe_a-MusicSDL.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcbe_a-MusicSDL.o `test -f 'SDL/MusicSDL.cpp' || echo '$(srcdir)/'`SDL/MusicSDL.cpp

libcbe_a-MusicSDL.obj: SDL/MusicSDL.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcbe_a-MusicSDL.obj -MD -MP -MF $(DEPDIR)/libcbe_a-MusicSDL.Tpo -c -o libcbe_a-MusicSDL.obj `if test -f 'SDL/MusicSDL.cpp'; then $(CYGPATH_W) 'SDL/MusicSDL.cpp'; else $(CYGPATH_W) '$(srcdir)/SDL/MusicSDL.cpp'; fi`
	$(am__mv) $(DEPDIR)/libcbe_a-MusicSDL.Tpo $(DEPDIR)/libcbe_a-MusicSDL.Po
#	source='SDL/MusicSDL.cpp' object='libcbe_a-MusicSDL.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcbe_a-MusicSDL.obj `if test -f 'SDL/MusicSDL.cpp'; then $(CYGPATH_W) 'SDL/MusicSDL.cpp'; else $(CYGPATH_W) '$(srcdir)/SDL/MusicSDL.cpp'; fi`

libcbe_a-PluginManager.o: PluginManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcbe_a-PluginManager.o -MD -MP -MF $(DEPDIR)/libcbe_a-PluginManager.Tpo -c -o libcbe_a-PluginManager.o `test -f 'PluginManager.cpp' || echo '$(srcdir)/'`PluginManager.cpp
	$(am__mv) $(DEPDIR)/libcbe_a-PluginManager.Tpo $(DEPDIR)/libcbe_a-PluginManager.Po
#	source='PluginManager.cpp' object='libcbe_a-PluginManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcbe_a-PluginManager.o `test -f 'PluginManager.cpp' || echo '$(srcdir)/'`PluginManager.cpp

libcbe_a-PluginManager.obj: PluginManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcbe_a-PluginManager.obj -MD -MP -MF $(DEPDIR)/libcbe_a-PluginManager.Tpo -c -o libcbe_a-PluginManager.obj `if test -f 'PluginManager.cpp'; then $(CYGPATH_W) 'PluginManager.cpp'; else $(CYGPATH_W) '$(srcdir)/PluginManager.cpp'; fi`
	$(am__mv) $(DEPDIR)/libcbe_a-PluginManager.Tpo $(DEPDIR)/libcbe_a-PluginManager.Po
#	source='PluginManager.cpp' object='libcbe_a-PluginManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcbe_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcbe_a-PluginManager.obj `if test -f 'PluginManager.cpp'; then $(CYGPATH_W) 'PluginManager.cpp'; else $(CYGPATH_W) '$(srcdir)/PluginManager.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
